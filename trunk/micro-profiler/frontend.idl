//	Copyright (C) 2011 by Artem A. Gevorkyan (gevorkyan.org)
//
//	Permission is hereby granted, free of charge, to any person obtaining a copy
//	of this software and associated documentation files (the "Software"), to deal
//	in the Software without restriction, including without limitation the rights
//	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//	copies of the Software, and to permit persons to whom the Software is
//	furnished to do so, subject to the following conditions:
//
//	The above copyright notice and this permission notice shall be included in
//	all copies or substantial portions of the Software.
//
//	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//	THE SOFTWARE.

import "ocidl.idl";

typedef [	public	]
struct FunctionStatisticsTag
{
	hyper FunctionAddress;
	hyper TimesCalled;
	hyper MaxReentrance;
	hyper ExclusiveTime;
	hyper InclusiveTime;
	hyper MaxCallTime;
} FunctionStatistics;

typedef [	public	]
struct FunctionStatisticsDetailedTag
{
	FunctionStatistics Statistics;
	long ChildrenCount;
	[size_is(ChildrenCount)] FunctionStatistics *ChildrenStatistics;
} FunctionStatisticsDetailed;

typedef [	public	]
struct ImageLoadInfoTag
{
	hyper Address;
	BSTR Path;
} ImageLoadInfo;

[	object, uuid(2F5ECF23-E98B-4399-AB4F-3083264C481B), pointer_default(unique)	]
interface IProfilerFrontend : IUnknown
{
	HRESULT Initialize([in] long process_id, [in] hyper ticks_resolution);
	HRESULT LoadImages([in] long count, [in, size_is(count)] ImageLoadInfo *images);
	HRESULT UpdateStatistics([in] long count, [in, size_is(count)] FunctionStatisticsDetailed *statistics);
	HRESULT UnloadImages([in] long count, [in, size_is(count)] hyper *images);
};

[ uuid(ABC1A8AB-31D5-475F-B541-987141CD4DB3) ]
coclass ProfilerFrontend
{
	[default] interface IProfilerFrontend;
};
