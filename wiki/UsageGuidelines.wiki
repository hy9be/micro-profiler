#sidebar TableOfContents
There several steps to add profiling support to your VisualStudio project (look for required files in the attachment section):
 # Add construction/destruction of the profiler's frontend to your project:
  # If executable's source project is allowed for modification: add global instance of {{{micro_profiler::profiler_frontend}}} class declared in {{{entry.h}}} include file. The object won't be used by your application, so you may enclose it in an anonymous namespace and move to a separate .cpp-file;
  # TBD: adding profiling support to DLLs;
 # Specify the scope to be profiled:
  # Apply */GH /Gh* command line options to compiler tool of your VS-project;
  # Or apply */GH /Gh* command line options to compiler tool of specific source (.cpp) file(s) you want to profile;
 # Link your project against {{{micro-profiler.lib}}}. Make sure your project is not referencing any other library that exports {{{_penter()}}} and/or {{{_pexit()}}} function(s);
 # Register micro-profiler.dll (this registers frontend and proxy/stub code for statistics IPC): {{{regsvr32 micro-profiler.dll}}}. *Please note, that registration is performed for the current user only (to work on Windows Vista/7). This has a side-effect that no applications run as another user can be profiled*.